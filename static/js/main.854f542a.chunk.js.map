{"version":3,"sources":["redux/actionTypes.js","components/Calculator.js","redux/actions.js","components/Display.js","redux/selectors.js","App.js","redux/helpers/math.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.js"],"names":["PRESS_NUM","PRESS_OPERATOR","PRESS_EQUALS","PRESS_CLEAR","Calculator","props","handleClick","event","val","target","value","test","pressNum","pressOperator","pressEquals","pressClear","bind","buttonData","name","buttonType","buttons","i","length","push","id","className","onClick","e","React","Component","connect","dispatch","num","type","payload","operator","state","input","store","getInput","App","href","MathNum","strValue","this","storedValue","toString","decimalIndex","indexOf","decimalPlace","mathValue","requiredDecimalPlace","mathVal","slice","Math","round","parseInt","otherNum","add","multiplier","subtract","multiply","divide","initialState","total","currentNum","lastOperator","updateTotal","nextNumNegative","mathNum","mathTotal","evaluate","calculatorReducer","action","numbersOnly","createStore","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.854f542a.chunk.js","sourcesContent":["export const PRESS_NUM = \"PRESS_NUM\";\nexport const PRESS_OPERATOR = \"PRESS_OPERATOR\";\nexport const PRESS_EQUALS = \"PRESS_EQUALS\";\nexport const PRESS_CLEAR = \"PRESS_CLEAR\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  pressNum,\n  pressOperator,\n  pressEquals,\n  pressClear,\n} from \"../redux/actions\";\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick = (event) => {\n    let val = event.target.value;\n    if (/[0-9.]/.test(val)) {\n      this.props.pressNum(val);\n    } else if (/[+*/-]/.test(val)) {\n      this.props.pressOperator(val);\n    } else if (val === \"=\") {\n      this.props.pressEquals();\n    } else {\n      this.props.pressClear();\n    }\n  };\n\n  render() {\n    let buttonData = [\n      { name: \"clear\", value: \"C\", buttonType: \"btn-warning\" },\n      { name: \"divide\", value: \"/\", buttonType: \"btn-primary\" },\n      { name: \"nine\", value: 9, buttonType: \"btn-info\" },\n      { name: \"eight\", value: 8, buttonType: \"btn-info\" },\n      { name: \"seven\", value: 7, buttonType: \"btn-info\" },\n      { name: \"multiply\", value: \"*\", buttonType: \"btn-primary\" },\n      { name: \"six\", value: 6, buttonType: \"btn-info\" },\n      { name: \"five\", value: 5, buttonType: \"btn-info\" },\n      { name: \"four\", value: 4, buttonType: \"btn-info\" },\n      { name: \"subtract\", value: \"-\", buttonType: \"btn-primary\" },\n      { name: \"three\", value: 3, buttonType: \"btn-info\" },\n      { name: \"two\", value: 2, buttonType: \"btn-info\" },\n      { name: \"one\", value: 1, buttonType: \"btn-info\" },\n      { name: \"add\", value: \"+\", buttonType: \"btn-primary\" },\n      { name: \"zero\", value: 0, buttonType: \"btn-info\" },\n      { name: \"decimal\", value: \".\", buttonType: \"btn-info\" },\n      { name: \"equals\", value: \"=\", buttonType: \"btn-success\" },\n    ];\n    let buttons = [];\n    for (let i = 0; i < buttonData.length; i++) {\n      buttons.push(\n        <button\n          key={i}\n          id={buttonData[i][\"name\"]}\n          className={`btn ${buttonData[i][\"buttonType\"]}`}\n          value={buttonData[i][\"value\"]}\n          onClick={(e) => this.handleClick(e, \"value\")}\n        >\n          {buttonData[i][\"value\"]}\n        </button>\n      );\n    }\n    return <div id=\"calculator-div\">{buttons}</div>;\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    pressNum: (num) => dispatch(pressNum(num)),\n    pressOperator: (operator) => dispatch(pressOperator(operator)),\n    pressEquals: () => dispatch(pressEquals()),\n    pressClear: () => dispatch(pressClear()),\n  };\n};\nexport default connect(null, mapDispatchToProps)(Calculator);\n","import {\n  PRESS_NUM,\n  PRESS_OPERATOR,\n  PRESS_EQUALS,\n  PRESS_CLEAR,\n} from \"./actionTypes\";\n\nexport const pressNum = (num) => ({\n  type: PRESS_NUM,\n  payload: num,\n});\n\nexport const pressOperator = (operator) => ({\n  type: PRESS_OPERATOR,\n  payload: operator,\n});\n\nexport const pressEquals = () => ({\n  type: PRESS_EQUALS,\n  payload: \"=\",\n});\n\nexport const pressClear = () => ({\n  type: PRESS_CLEAR,\n  payload: \"C\",\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getInput } from \"../redux/selectors\";\n\nconst Display = ({ input }) => (\n  <div id=\"display\" className=\"d-flex align-items-center\">\n    {input}\n  </div>\n);\n\nconst mapStateToProps = (state) => {\n  const input = getInput(state);\n  return { input };\n};\n\nexport default connect(mapStateToProps)(Display);\n","export const getInput = (store) => store.input;\n","import React from \"react\";\nimport \"./App.css\";\nimport Calculator from \"./components/Calculator\";\nimport Display from \"./components/Display\";\n\nfunction App() {\n  return (\n    <div\n      id=\"main\"\n      className=\"d-flex justify-content-center align-items-center flex-column\"\n    >\n      <div className=\"App\">\n        <Display />\n        <Calculator />\n      </div>\n      <p>\n        designed and coded by{\" \"}\n        <a href=\"https://github.com/marley/fcc-calculator\">marley</a>\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","/* MathNum is a number that will accurately portray int and float values */\n\nexport default function MathNum(strValue) {\n  this.storedValue = strValue;\n  this.toString = function () {\n    return this.storedValue;\n  };\n  this.decimalIndex = function () {\n    // returns index of decimal or -1 if none\n    return this.storedValue.indexOf(\".\");\n  };\n  this.decimalPlace = function () {\n    // returns number of decimal places\n    if (this.decimalIndex() < 0) {\n      return 0;\n    }\n    return this.storedValue.length - 1 - this.decimalIndex();\n  };\n\n  this.mathValue = function (requiredDecimalPlace) {\n    // remove decimal if needed\n    let mathVal =\n      this.decimalIndex() >= 0\n        ? `${this.storedValue.slice(\n            0,\n            this.decimalIndex()\n          )}${this.storedValue.slice(this.decimalIndex() + 1)}`\n        : this.storedValue;\n\n    if (this.decimalPlace() < requiredDecimalPlace) {\n      let thisMany = requiredDecimalPlace - this.decimalPlace();\n      mathVal += \"0\" * thisMany; // append as many zeroes as needed\n    }\n\n    return Math.round(parseInt(mathVal));\n  };\n\n  this.requiredDecimalPlace = function (otherNum) {\n    return this.decimalPlace() >= otherNum.decimalPlace()\n      ? this.decimalPlace()\n      : otherNum.decimalPlace();\n  };\n\n  this.add = function (otherNum) {\n    let multiplier = this.requiredDecimalPlace(otherNum);\n    let result = this.mathValue(multiplier) + otherNum.mathValue(multiplier);\n    return result / 10 ** multiplier;\n  };\n\n  this.subtract = function (otherNum) {\n    let multiplier = this.requiredDecimalPlace(otherNum);\n    let result = this.mathValue(multiplier) - otherNum.mathValue(multiplier);\n    return result / 10 ** multiplier;\n  };\n\n  this.multiply = function (otherNum) {\n    let multiplier = this.requiredDecimalPlace(otherNum);\n    let result = this.mathValue(multiplier) * otherNum.mathValue(multiplier);\n    return result / 10 ** (multiplier * 2);\n  };\n\n  this.divide = function (otherNum) {\n    let multiplier = this.requiredDecimalPlace(otherNum);\n    let result = this.mathValue(multiplier) / otherNum.mathValue(multiplier);\n    return result;\n  };\n}\n\n// // Test cases:\n// let a = new MathNum(\"12.5\");\n// let b = new MathNum(\"1.02\");\n\n// console.log(a.add(b));\n// console.log(\"Result should be 13.52\");\n// console.log(a.subtract(b));\n// console.log(\"Result should be 11.48\");\n// console.log(a.multiply(b));\n// console.log(\"Result should be 12.75\");\n// let c = new MathNum(\"5\");\n// let d = new MathNum(\"5.5\");\n// console.log(c.multiply(d));\n// console.log(\"Result should be 27.5\");\n// let e = new MathNum(\"2\");\n// let f = new MathNum(\"4\");\n// console.log(a.divide(e));\n// console.log(\"Result should be 6.25\");\n// console.log(a.divide(c));\n// console.log(\"Result should be 2.5\");\n// console.log(e.add(f));\n// console.log(\"Should be 6\");\n// let g = new MathNum(\"0\");\n// let h = new MathNum(\"80\");\n// console.log(g.add(h));\n// console.log(\"Should be 80\");\n","import {\n  PRESS_NUM,\n  PRESS_OPERATOR,\n  PRESS_EQUALS,\n  PRESS_CLEAR,\n} from \"../actionTypes\";\nimport MathNum from \"../helpers/math\";\n\nconst initialState = {\n  input: \"0\",\n  total: 0,\n  currentNum: \"0\",\n  lastOperator: \"+\",\n};\n\nconst evaluate = (num, operator, total) => {\n  // params: int/float, string, int/float\n  let mathNum = new MathNum(`${num}`);\n  let mathTotal = new MathNum(`${total}`);\n  switch (operator) {\n    case \"+\":\n      return mathTotal.add(mathNum);\n    case \"-\":\n      return mathTotal.subtract(mathNum);\n    case \"*\":\n      return mathTotal.multiply(mathNum);\n    case \"/\":\n      return mathTotal.divide(mathNum);\n    default:\n      return \"ERROR :(\";\n  }\n};\n\nconst updateTotal = (state, payload, nextNumNegative) => {\n  /* if we reach operator or end of expression, then\n  evaluate exp so far */\n  let currentNum = state.currentNum;\n  let total = state.total;\n  if (currentNum.length > 0 && currentNum !== \"-\") {\n    total = evaluate(currentNum, state.lastOperator, state.total);\n    currentNum = \"\";\n  } else {\n    if (nextNumNegative) {\n      currentNum = \"-\";\n    } else {\n      currentNum = \"\";\n    }\n  }\n  let lastOperator = payload; // update to next operator\n\n  return { total, lastOperator, currentNum };\n};\n\nconst calculatorReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PRESS_NUM: {\n      let payload = action.payload;\n      let input = state.input;\n      let currentNum = state.currentNum;\n      if (payload === \".\") {\n        if (currentNum.indexOf(\".\") < 0) {\n          // if no other decimal points, then can append\n          input = `${state.input}${payload}`;\n          currentNum = `${state.currentNum}${payload}`;\n        }\n      } else if (input !== \"0\") {\n        input = `${state.input}${payload}`;\n        currentNum = `${state.currentNum}${payload}`;\n      } else {\n        if (payload === \"0\") {\n          // do nothing\n          // input = state.input;\n        } else {\n          // replace state\n          input = payload; // replace 0 with new number\n          currentNum = payload;\n        }\n      }\n      return { ...state, input, currentNum };\n    }\n    case PRESS_OPERATOR: {\n      let payload = action.payload;\n      let input = state.input;\n      let numbersOnly = /[0-9.]/;\n      let nextNumNegative = false;\n      if (numbersOnly.test(input[input.length - 1])) {\n        // append operator after any number\n        input = `${input}${payload}`;\n      } else {\n        if (payload === \"-\") {\n          // it's okay to add - after another operator\n          input = `${input}${payload}`;\n          nextNumNegative = true;\n          payload = state.lastOperator;\n        } else {\n          // default to last operator entered with new operator\n          if (\n            input[input.length - 1] === \"-\" &&\n            input[input.length - 1] !== state.lastOperator\n          ) {\n            // e.g. '5*-' < as you can see the lastOperator is *, but the last thing entered was a '-'\n            input = `${input.slice(0, input.length - 2)}${payload}`;\n          } else {\n            input = `${input.slice(0, input.length - 1)}${payload}`;\n          }\n        }\n      }\n      let { total, lastOperator, currentNum } = updateTotal(\n        state,\n        payload,\n        nextNumNegative\n      );\n      return { ...state, input, total, currentNum, lastOperator };\n    }\n    case PRESS_EQUALS: {\n      // TODO all this assumes that user has correctly enter numbers, no 0/0 or ** etc\n      // updateTotal\n      let { total, lastOperator, currentNum } = updateTotal(state, \"+\");\n      // set input to total\n      return { ...state, input: `${total}`, total, currentNum, lastOperator };\n    }\n    case PRESS_CLEAR: {\n      return {\n        input: \"0\",\n        total: 0,\n        currentNum: \"0\",\n        lastOperator: \"+\",\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default calculatorReducer;\n","import { createStore } from \"redux\";\nimport calculatorReducer from \"./reducers\";\n\nexport default createStore(calculatorReducer);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}